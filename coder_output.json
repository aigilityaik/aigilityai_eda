[{"task_name": "task_1", "task_description": "Correlation Study: Examine correlation between wind speed and power output, Wind Speed (m/s), LV ActivePower (kW).", "code": "```python\n\n\n\nimport pandas as pd\n\n# Load the data from the CSV file\nimport pandas as pd\n\n# Step 1: Read the entire CSV file\ndf = pd.read_csv(\"A1.csv\")\n\n# Step 2: Select specific columns\ndf = df[['LV ActivePower (kW)', 'Wind Speed (m/s)']]\n\n# Step 3: Set the data types for the selected columns\ndf = df.astype({'LV ActivePower (kW)': 'float64', 'Wind Speed (m/s)': 'float64'})\n\n# Calculate the correlation between 'Wind Speed (m/s)' and 'LV ActivePower (kW)'\ncorrelation = df['Wind Speed (m/s)'].corr(df['LV ActivePower (kW)'])\n\nprint(f\"Correlation between Wind Speed (m/s) and LV ActivePower (kW): {correlation}\")\n\n\n\n```", "execution_status": "successful", "code_output": " \nCorrelation between Wind Speed (m/s) and LV ActivePower (kW): 0.9127742911275548\n", "error_message": "", "images_saved": [], "code_func": "\n\n\nimport pandas as pd\n\ndef task_1():\n    # Load the data from the CSV file\n    # Step 1: Read the entire CSV file\n    df = pd.read_csv(\"A1.csv\")\n\n    # Step 2: Select specific columns\n    df = df[['LV ActivePower (kW)', 'Wind Speed (m/s)']]\n\n    # Step 3: Set the data types for the selected columns\n    df = df.astype({'LV ActivePower (kW)': 'float64', 'Wind Speed (m/s)': 'float64'})\n\n    # Calculate the correlation between 'Wind Speed (m/s)' and 'LV ActivePower (kW)'\n    correlation = df['Wind Speed (m/s)'].corr(df['LV ActivePower (kW)'])\n\n    print(f\"Correlation between Wind Speed (m/s) and LV ActivePower (kW): {correlation}\")\n\n# Function call\ntask_1()\n\n\n"}, {"task_name": "task_8", "task_description": "Wind Speed vs Direction: Explore relationship between wind speed and direction, Wind Speed (m/s), Wind Direction (\u00b0).", "code": "```python\n\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport uuid\n\n# Load the data from the CSV file\nimport pandas as pd\n\n# Step 1: Read the CSV file without any additional operations\ndf = pd.read_csv(\"A1.csv\")\n\n# Step 2: Select the specific columns you need\ndf = df[['Wind Speed (m/s)', 'Wind Direction (\u00b0)']]\n\n# Step 3: Set the data types for the selected columns\ndf = df.astype({'Wind Speed (m/s)': 'float64', 'Wind Direction (\u00b0)': 'float64'})\n\n# Plotting Wind Speed vs Wind Direction\nplt.figure(figsize=(12, 8))  # Set a suitable figure size\nplt.scatter(df['Wind Direction (\u00b0)'], df['Wind Speed (m/s)'], alpha=0.5, label='Data Points')\nplt.title('Wind Speed vs Wind Direction')\nplt.xlabel('Wind Direction (\u00b0)')\nplt.ylabel('Wind Speed (m/s)')\nplt.grid(True)\nplt.xticks(rotation=90)  # Rotate x-axis labels\nplt.autoscale()  # Autoscale the limits of the axes\nplt.legend()\n\n# Generate a unique UUID\nunique_id = uuid.uuid4()\n\n# Save the plot with a unique UUID in the file name\nplt.savefig(f\"images/task_8/wind_speed_vs_direction_{unique_id}.png\", bbox_inches='tight')\n\nplt.clf()  # Clear the figure after saving\n\n\n\n```", "execution_status": "successful", "code_output": " \n", "error_message": "", "images_saved": ["data/images/task_8/wind_speed_vs_direction_5974bef8-cbee-495c-a0a3-310a8239e026.png"], "code_func": "\n\n\nimport pandas as pd\nimport matplotlib.pyplot as plt\nimport uuid\n\ndef task_8():\n    # Load the data from the CSV file\n    df = pd.read_csv(\"A1.csv\")\n\n    # Select the specific columns you need\n    df = df[['Wind Speed (m/s)', 'Wind Direction (\u00b0)']]\n\n    # Set the data types for the selected columns\n    df = df.astype({'Wind Speed (m/s)': 'float64', 'Wind Direction (\u00b0)': 'float64'})\n\n    # Plotting Wind Speed vs Wind Direction\n    plt.figure(figsize=(12, 8))  # Set a suitable figure size\n    plt.scatter(df['Wind Direction (\u00b0)'], df['Wind Speed (m/s)'], alpha=0.5, label='Data Points')\n    plt.title('Wind Speed vs Wind Direction')\n    plt.xlabel('Wind Direction (\u00b0)')\n    plt.ylabel('Wind Speed (m/s)')\n    plt.grid(True)\n    plt.xticks(rotation=90)  # Rotate x-axis labels\n    plt.autoscale()  # Autoscale the limits of the axes\n    plt.legend()\n\n    # Generate a unique UUID\n    unique_id = uuid.uuid4()\n\n    # Save the plot with a unique UUID in the file name\n    plt.savefig(f\"images/task_8/wind_speed_vs_direction_{unique_id}.png\", bbox_inches='tight')\n\n    plt.clf()  # Clear the figure after saving\n\n# Function call\ntask_8()\n\n\n"}]